/**
 *                _
 *   ____ _____  (_)
 *  / __ `/ __ \/ /
 * / /_/ / /_/ / /
 * \__,_/\____/_/
 * 
 * (c) Claudio Procida 2017-2024
 * 
 * @format
 */

@import 'variables';
@import 'functions';

@mixin set-bg-border-colors($bgcolor) {
  $color: foreground-meeting-color-contrast($bgcolor);

  background-color: $bgcolor;
  border-color: darken($bgcolor, 16.667%);
  color: $color;

  a {
    color: $color;
  }

  .active {
    a {
      color: $color;
    }
  }
}

@mixin set-color($color, $tone: medium) {
  @extend .#{$tone}-#{'' + $color};
}

@mixin set-normal-color($color, $tone) {
  &.#{'' + $color} {
    @include set-color($color, $tone);
  }
}

@mixin set-normal-active-colors($color, $tone) {
  &.#{'' + $color} {
    @include set-color($color, $tone);

    @each $state in hover, focus, active {
      &:#{$state} {
        @if $state == hover {
          @include set-color($color, $tone);
        } @else {
          @include set-color($color, dark);
        }
      }
    }
  }
}

@mixin levels($tone: medium) {
  @each $level in accent, danger, error, warning, info, success {
    @include set-normal-color($level, $tone);
  }
}

@mixin active-levels($tone: medium) {
  @each $level in accent, danger, error, warning, info, success {
    @include set-normal-active-colors($level, $tone);
  }
}

@mixin colors($tone: medium) {
  @each $color in accent, blue, green, red, amber, banana, raspberry, plum {
    @include set-normal-color($color, $tone);
  }
}

@mixin active-colors($tone: medium) {
  @each $color in accent, blue, green, red, amber, banana, raspberry, plum {
    @include set-normal-active-colors($color, $tone);
  }
}

@mixin reset-first-last-margin {
  > :first-child {
    margin-top: 0;
  }

  > :last-child {
    margin-bottom: 0;
  }
}
